{"ast":null,"code":"var _jsxFileName = \"/Users/maguiheredia/Downloads/Countries-main/client/src/components/Containers/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCountries } from '../../redux/actions';\nimport Country from '../Dumbs/country';\nimport { connect } from 'react-redux';\nimport './home.css';\nimport Search from './search';\nimport Pagination from '../Dumbs/pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    countries,\n    getCountries\n  } = _ref;\n  const [paisesHome, setPaisesHome] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  useEffect(() => {\n    getCountries();\n  }, []);\n  const indexOfLastPost = currentPage * postsPerPage; // 1 * 8 = 8\n  // 2 * 8 = 16\n  // 3 * 8 = 24\n\n  const indexOfFirstPost = indexOfLastPost - postsPerPage; // 8 - 8 = 0\n  // 16 - 8 = 8\n\n  let currentPosts = paisesHome.slice(indexOfFirstPost, indexOfLastPost);\n  /*\n  [\n    0:{}\n    1:{}\n    2:{}\n    3:{}\n    4:{}\n    5:{}\n    6:{}\n    7:{}\n  ]\n  */\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [paisesHome]);\n  useEffect(() => {\n    console.log('soy currentPost', currentPosts);\n  }, []); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    setPaisesHome([...countries]);\n  }, [countries]);\n  console.log('soy home', countries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barra\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        setPaisesHome: setPaisesHome,\n        paisesHome: paisesHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cartas\",\n      children: currentPosts.length > 0 ? currentPosts.map(e => {\n        return /*#__PURE__*/_jsxDEV(Country, {\n          name: e.name,\n          ID: e.ID,\n          Bandera: e.Bandera,\n          Continente: e.Continente\n        }, e.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 32\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), Math.ceil(paisesHome.length / postsPerPage) > 1 ? /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: paisesHome.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"uYf9NVCIclfCCbhyIsJLsc2vV5k=\");\n\n_c = Home;\n\nfunction mapStateToProps(state) {\n  return {\n    countries: state.countries\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getCountries\n})(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","getCountries","Country","connect","Search","Pagination","Home","countries","paisesHome","setPaisesHome","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","console","log","paginate","pageNumber","length","map","e","name","ID","Bandera","Continente","Math","ceil","mapStateToProps","state"],"sources":["/Users/maguiheredia/Downloads/Countries-main/client/src/components/Containers/home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getCountries, } from '../../redux/actions';\nimport Country from '../Dumbs/country'\nimport { connect } from 'react-redux';\nimport './home.css'\nimport Search from './search';\nimport Pagination from '../Dumbs/pagination';\n\n\nfunction Home({ countries, getCountries }) {\n    const [paisesHome, setPaisesHome] = useState([])\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [postsPerPage] = useState(10);\n\n    useEffect(() => {\n        getCountries()\n    }, [])\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    // 1 * 8 = 8\n    // 2 * 8 = 16\n    // 3 * 8 = 24\n\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    // 8 - 8 = 0\n    // 16 - 8 = 8\n\n    let currentPosts = paisesHome.slice(indexOfFirstPost, indexOfLastPost);\n    /*\n    [\n      0:{}\n      1:{}\n      2:{}\n      3:{}\n      4:{}\n      5:{}\n      6:{}\n      7:{}\n    ]\n    */\n\n    useEffect(() => {\n        setCurrentPage(1)\n    }, [paisesHome])\n\n    useEffect(() => {\n        console.log('soy currentPost',currentPosts)\n    },[])\n    // Change page\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n    useEffect(() => {\n        setPaisesHome([...countries])\n    }, [countries])\n    console.log('soy home', countries)\n\n    return (\n        <div className='home'>\n            <div className='barra'>\n                <Search setPaisesHome={setPaisesHome} paisesHome={paisesHome} />\n            </div>\n            <div className='cartas'>\n                {currentPosts.length > 0 ?\n                    currentPosts.map(e => {\n                        return <Country key={e.ID} name={e.name} ID={e.ID} Bandera={e.Bandera} Continente={e.Continente} />\n                    })\n                    : null}\n            </div>\n            {\n        Math.ceil(paisesHome.length / postsPerPage) > 1 \n        ?  <Pagination postsPerPage={postsPerPage} totalPosts={paisesHome.length} paginate={paginate} />\n        : null\n        }\n        </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        countries: state.countries\n    };\n}\n\nexport default connect(mapStateToProps, { getCountries })(Home);"],"mappings":"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"},"metadata":{},"sourceType":"module"}